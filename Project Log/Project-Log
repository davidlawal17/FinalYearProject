Project Log- Investr
Evidence of some of my work that I have been working on is shown in the project Log folder, for example pictures of my wireframes and a document of research I did before starting 

Note- I am behind on my schedule which I planned in the interim report 
The work which I have already completed in the previous weeks are:
#Setting up my pycharm enviornment and firebase.
#Making the different  git branches
# I have made two new branches: develop and user/authentication
# I have made a start to the user authentication, I have set up a firebase project and I am working on making a connection between pycharm and  firebase, however I have encountered a couple of issues.
After a bit of research, I concluded that its best for me to create a virtual enviornment, as the problem seems to do with version issues. The virtual environment will allow me to maneouver these version conflicts

Considering that the project started on the 23rd of September 2024
I am now on week 20 of the Project
Week Monday 10th February - Sunday 16th February
# As I behind and my interview is next week, the plan for this week is to make as much progress as I can
More specifcally I am to,
1.Finish the user authentication system, along with the integration of the PostgreSQL database. 
2. Work on the frontend development, in terms of basic components such as the homepage(dashboard). The aim here is not to completely finish the frontend, but have Completed enough to have a competent workable demo for the interview
3. I aim on a core functional feature, which i will decided later on in the week, probably the Property search and filter.
4. Start Creating a presentation for my interview next week

Week Monday 17th February- Sunday 23rd February 
This is a continuation of what I was working on the previous week. I have made significant progress with implementing the backend of the user authentication system. This week i will focus on intergating the PostgreSQL database, after that I focus on implementing some frontend features, so I can see the authentication process in action. Then as stated before, I will begin woring on a core featurw which I have decied will be the property search and filter, and prepare for my interview.

Week Monday 24th February- Sunday 2nd March
I have compeleted the user authentication, integrated PostgreSQL for the backend, and have implemented some frontend design. Now I am focsuing on devloping and implementing my core features: which are the property search and filter feature , the recommendation system and the simulation system. I will start with the property search and filter feature.
- I have thought of new features to add which I didn't mention in my interim report. These features are a "save property" feature, which allows the user to save properties which they like, the other is a "news" or "trending feature", which displays relevant information about the real estate market. Additionally, I want to remove the "begginers guide" feature as in accordance to the feedback I recived from my interim report, I don;t think it's an efficinet use of my time to gain technical marks
The "save property" feature and "news/trending" is a more efficient use of my time which are both more technical

Week Monday 3rd March - Sundy 9th March 
This week I am continuing on developing the property filter and search feature. After experimenting with my code during last week, I decided to change my approach. The API which I initally planned to use was not suitable
for the property search and filter , as the data was not to do with indiviual prperties, but was conclusions on properties in specific postcodes: therefore it's not suitable for property listings. I then tried to web scrape to obtain data for this feature, however I ran into some issues (companies don't want their sites being scraped for free). After brainstorming, I decided to go with a "crowdsourced" approach. Meaning that the users can upload their own properties to sell. However I will initally upload some properties, to get the ball rolling
Whether these properties which i intially upload, will be real or not, is something which I am contemplating.

Update:
I have implemented a working property search and filter feature. Based on my experience implemnting this feature, I have decided that the properties listed on this festure will not be real, however they will be as realistic as possible to give an accurate account of the property market>
I am now working on the save property feature, which allows the users to save their favourite property. I am yet to add a sell feature where users can post properties which they want to sell. I am not sure If I will add this do to time constraints/difficulty.

Week Monday 10th March - Sunday 16th March
This week I am continuing my work on implementing the save property feature, as stated in my last Update. By the end of this week I hope to have this completed, So I can move onto the two most complex features which are the simulation and recommendation feature. 
If I manage to finish the save property feature before the end of the week, I will get started on the news/trending feature.

Week Monday 17th March - Sunday 22nd March
Unfortnualtey I wasn't able to finish the save property feature last week, and will have to continue working on it this week. However, am I very close to completing it so it shoudln't take long. 
One of the difficutlites I encountered with this was implemnting flask JWT (Json Web Token). I needed to set this to authenticate and protect my API endpoints, ensuring users could only access their specific data, so in this case ensuring that 
each users saved property will be unique to them

However I kept encounering errors, it got to a point where my web app wouldn't even render on the page and I was just seeing an error.
The main cause of one of the errors which I encountered was using the wrong identifier. Since i am storing the users in tw sepatae database (Firebase for the authentication) and a PostgreSQl database (provided by Heroku) for the managment of user data and the application data,
I needed to find a common identifier that can correctly link and identifiy each user. Initially I used "user id"  which was generated on my heroku database to be the primary key for the user table, however this didn't correctly identify each user because user id was only generated by the heroku database. There is no such column as "user id" in firestore. The primary key of which the firestore's database uses is "User UID", which i refer to as "firebaseuid".
I lated realised it would be better to use the firebaseuid as an identifier. Although this would make the user id pretty much redundant I figured it would be more conveneient than making user id the primary key, as I would have to make a lot of changes due to the way authentication and my APIs are set up in the backend.

This week the plan is to finish what I couldn't last week, and to make as much progress on coding as I can

Week Monday 31st March - Sunday 6th March
I have missed out the last week from the project log, as I haven't been working on it due to the commitments and univesrity deadlines. The plan for this week is to pick up the pace on implemntating and developing, as I only have approximately a month left on this project.

update- 
I have managed to implemented an add property feature to my project. It allows the user to add properties to the property listing. I remember personal tutor basically saying it would be a good idea, so i decied to implement it.
The challenging part about this was making sure the image uploads were stored and rendered correctly, which took quiet some time. Uploaded images weren't showing because the paths weren't aligned properly, also default images weren't dsiplaying.
Another issue i ran into was being logged out after uploading an image, and this turned out to be an authentication token issue.
After fixing these issues I refactored the backend to use current_app, instead of directly acessing app to vaoid import erros.

Since we can now search for, view and add properties it only makes sense for me to add a way to remove propeties. I will try and implement this now.

update-
I have managed to implement a way for the users to delete a property. The way it works is that a user can only delete a property which belongs to them.
This was challenging as i had to ensure proper ownership validation. I had to compare thr firebase_uid of the logged in user against the created_by field of each property.
Initially the delet option wasn't showing. I spent a lot of time troubleshooting this error, trying to fix it. After a while i realised it was because of foregin key constraint issuses in the database. The created_by field referenced a user that didn't exists in the user table,
which caused errors.
To resolve this I updated the foreign key constrain the database using an SQL script.

Monday 7th April - Sunday 13th April
I have now spent a lot of time on the property listings feature, I am happy with it. It's now time to move on to my advance features. These two features which are the recommendation and simulation feature will be the most complex.
I will start with the recommendation feature.

-update
I have successfully integrated a machine learning model for the investment recommendation feature of my real estate assistant platform. The model is a Gradient Boosting Classifier trained on a cleaned dataset of London property listings. 

However, during testing, I noticed that the model predicts “Buy” for nearly every property, often with 100% confidence. This is a clear sign of overfitting. This means that the model is not realistic, therefore I am to improve the reliabily and accuracy of the model.
I realised that there was a label leakage. One of the labels which the model used for classification was a feature which it was being trained on, this is what caused the overfitting. Therefore I had to ammend my features, and labels slightly. This was challenging as the model's performance often dropped,
It was a struggle building an accuracte and realisitc model that was able to generalise well. Espeically on the limited data which the properties in my property listing provided. However we got there in the end, I found that engineering features such as rent-to-price ratio and price-per-bedroom helped improve the model alot.
After a lot of trial and error, experimentation partnered with logical thinking I was finally able to build a decent model (72% accuracy)

The next challenge was making sure the frontend visualisations didn't contradict the model's output(recommendations). This was just a case of using logic to detect inconsistencies and compensate for them by giving an explanation and alternate graph.

I am happy with the work I have managed to do however, I am running out of time I think I can only do one more feature so I have to choose between a news feature and the simulation feature.

